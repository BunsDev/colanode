generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id         String    @id @db.VarChar(30)
  name       String    @db.VarChar(256)
  email      String    @unique(map: "IX_accounts_email") @db.VarChar(256)
  avatar     String?   @db.VarChar(256)
  password   String?   @db.VarChar(256)
  attrs      Json?
  createdAt  DateTime  @db.Timestamptz(6) @map("created_at")
  updatedAt  DateTime? @db.Timestamptz(6) @map("updated_at")
  status     Int

  @@map("accounts")
}

model workspaces {
  id          String    @id @db.VarChar(30)
  name        String    @db.VarChar(256)
  description String?   @db.VarChar(256)
  avatar      String?   @db.VarChar(256)
  attrs       Json?
  createdAt   DateTime  @db.Timestamptz(6) @map("created_at")
  createdBy   String    @db.VarChar(30) @map("created_by")
  updatedAt   DateTime? @db.Timestamptz(6) @map("updated_at")
  updatedBy   String?   @db.VarChar(30) @map("updated_by")
  status      Int
  versionId   String    @db.VarChar(30) @map("version_id")

  @@map("workspaces")
}

model workspaceAccounts {
  workspaceId   String    @db.VarChar(30) @map("workspace_id")
  accountId     String    @db.VarChar(30) @map("account_id")
  userId    String    @db.VarChar(30) @map("user_id")
  role          Int
  attrs         Json?
  createdAt     DateTime  @db.Timestamptz(6) @map("created_at")
  createdBy     String    @db.VarChar(30) @map("created_by")
  updatedAt     DateTime? @db.Timestamptz(6) @map("updated_at")
  updatedBy     String?   @db.VarChar(30) @map("updated_by")
  status        Int
  versionId     String    @db.VarChar(30) @map("version_id")

  @@map("workspace_accounts")
  @@id([workspaceId, accountId])
}

model nodes {
  id              String    @id @db.VarChar(30)
  workspaceId     String    @db.VarChar(30) @map("workspace_id")
  parentId        String?   @db.VarChar(30) @map("parent_id")
  type            String    @db.VarChar(30)
  index           String?   @db.VarChar(30)
  attrs           Json?
  content         Json?
  createdAt       DateTime  @db.Timestamptz(6) @map("created_at")
  createdBy       String    @db.VarChar(30) @map("created_by")
  updatedAt       DateTime? @db.Timestamptz(6) @map("updated_at")
  updatedBy       String?   @db.VarChar(30) @map("updated_by")
  versionId       String    @db.VarChar(30) @map("version_id")
  serverCreatedAt DateTime  @db.Timestamptz(6) @map("server_created_at")
  serverUpdatedAt DateTime? @db.Timestamptz(6) @map("server_updated_at")
  serverVersionId String    @db.VarChar(30) @map("server_version_id")

  parent nodes? @relation("node_parent_child", fields: [parentId], references: [id], onDelete: Cascade)
  children nodes[] @relation("node_parent_child")

  @@map("nodes")
}

model accountDevices {
  id            String    @id @db.VarChar(30)
  accountId     String    @db.VarChar(30) @map("account_id")
  type          Int
  version       String    @db.VarChar(30) @map("version")
  platform      String?   @db.VarChar(30)
  cpu           String?   @db.VarChar(30)
  hostname      String?   @db.VarChar(30)
  createdAt     DateTime  @db.Timestamptz(6) @map("created_at")
  lastOnlineAt  DateTime? @db.Timestamptz(6) @map("last_online_at")
  lastActiveAt  DateTime? @db.Timestamptz(6) @map("last_active_at")

  @@map("account_devices")
}

model updates {
  id          String    @id @db.VarChar(30)
  workspaceId String    @db.VarChar(30) @map("workspace_id")
  type        String    @db.VarChar(30)
  content     Json?
  createdAt   DateTime  @db.Timestamptz(6) @map("created_at")
  devices     String[]

  @@map("updates")
}
